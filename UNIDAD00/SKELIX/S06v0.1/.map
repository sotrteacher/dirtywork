GAS LISTING bootsect.s 			page 1


   1              	# Skelix by Xiaoming Mo (skelixos@gmail.com)
   2              	# Licence: GPLv2
   3              			.text
   4              			.globl	start
   5              			.include "kernel.inc"
   1              	# Skelix by Xiaoming Mo (skelixos@gmail.com)
   2              	# Licence: GPLv2
   3              	.set CODE_SEL, 0x08	# code segment selector in kernel mode 
   4              	.set DATA_SEL, 0x10 # data segment selector in kernel mode
   5              	.set IDT_ADDR, 0x80000	# IDT start address
   6              	.set IDT_SIZE, (256*8)	# IDT has fixed length
   7              	.set GDT_ADDR, (IDT_ADDR+IDT_SIZE)
   8              				# GDT starts after IDT
   9              	.set GDT_ENTRIES, 5	# GDT has 5 descriptors
  10              				# null descriptor
  11              				# cs segment descriptor for kernel
  12              				# ds segment descriptor for kernel
  13              				# current process tss
  14              				# current process ldt
  15              	.set GDT_SIZE, (8*GDT_ENTRIES)
  16              				# GDT length
  17              	.set KERNEL_SECT, 72	# Kernel lenght, counted by sectors
  18              	.set STACK_BOT, 0xa0000	# stack starts at 640K
  19              	
   6              			.code16
   7              	start:
   8 0000 66EA0000 			jmpl    $0x0,   $code
   8      00000000 
   9              	gdt:   
  10 0008 00000000 			.quad	0x0000000000000000 # null descriptor
  10      00000000 
  11 0010 FFFF0000 			.quad	0x00cf9a000000ffff # cs
  11      009ACF00 
  12 0018 FFFF0000 			.quad	0x00cf92000000ffff # ds
  12      0092CF00 
  13 0020 00000000 			.quad	0x0000000000000000 # reserved for tss
  13      00000000 
  14 0028 00000000 			.quad	0x0000000000000000 # reserved for ldt
  14      00000000 
  15              	gdt_48:
  16 0030 2700     			.word	.-gdt-1
  17 0032 00080800 			.long	GDT_ADDR
  18              	code:
  19 0036 31C0     			xorw	%ax,	%ax
  20 0038 8ED8     			movw	%ax,	%ds	# ds = 0x0000
  21 003a 8ED0     			movw	%ax,	%ss	# stack segment = 0x0000
  22 003c BC0010   			movw	$0x1000,%sp	# arbitrary value 
  23              								# used before pmode
  24              	
  25              			## read rest of kernel to 0x10000
  26 003f B80010   			movw	$0x1000,%ax
  27 0042 8EC0     			movw	%ax,	%es
  28 0044 31DB     			xorw	%bx,	%bx	# es:bs destination address
  29 0046 B94800   			movw	$KERNEL_SECT,%cx
  30 0049 BE0100   			movw	$1,	%si	# 0 is boot sector
  31              	rd_kern:
  32 004c E84F00   			call	read_sect
GAS LISTING bootsect.s 			page 2


  33 004f 81C30002 			addw	$512,	%bx
  34 0053 46       			incw	%si
  35 0054 E2F6     			loop	rd_kern
  36              	
  37 0056 FA       			cli
  38              			
  39              			## move first 512 bytes of kernel to 0x0000
  40              			## it will move rest of kernel to 0x0200,
  41              			## that is, next to this sector
  42 0057 FC       			cld
  43 0058 B80010   			movw	$0x1000,%ax
  44 005b 8ED8     			movw	%ax,	%ds
  45 005d B80000   			movw	$0x0000,%ax
  46 0060 8EC0     			movw	%ax,	%es
  47 0062 31F6     			xorw	%si,	%si
  48 0064 31FF     			xorw	%di,	%di
  49 0066 B98000   			movw	$512>>2,%cx
  50 0069 F3       			rep
  51 006a 66A5     			movsl
  52              	
  53 006c 31C0     			xorw	%ax,	%ax
  54 006e 8ED8     			movw	%ax,	%ds	# reset ds to 0x0000
  55              			## move	gdt 
  56 0070 B88080   			movw	$GDT_ADDR>>4,%ax
  57 0073 8EC0     			movw	%ax,	%es
  58 0075 BE0000   			movw	$gdt,	%si
  59 0078 31FF     			xorw	%di,	%di
  60 007a B90A00   			movw	$GDT_SIZE>>2,%cx
  61 007d F3       			rep
  62 007e 66A5     			movsl
  63              	
  64              	enable_a20:
  65              			## The Undocumented PC
  66 0080 E464     			inb		$0x64,	%al	
  67 0082 A802     			testb	$0x2,	%al
  68 0084 75FA     			jnz		enable_a20
  69 0086 B0DF     			movb	$0xdf,	%al
  70 0088 E664     			outb	%al,	$0x64
  71              	
  72 008a 0F011600 			lgdt	gdt_48
  72      00
  73              	
  74              			## enter pmode
  75 008f 0F20C0   			movl	%cr0,	%eax
  76 0092 6683C801 			orl		$0x1,	%eax
  77 0096 0F22C0   			movl	%eax,	%cr0
  78              	
  79 0099 EA000008 			ljmp	$CODE_SEL, $0x0
  79      00
  80              	
  81              			## in:	ax:	LBA address, starts from 0
  82              			##		es:bx address for reading sector
  83              	read_sect:
  84 009e 50       			pushw	%ax
  85 009f 51       			pushw	%cx
  86 00a0 52       			pushw	%dx
  87 00a1 53       			pushw	%bx
GAS LISTING bootsect.s 			page 3


  88              	
  89 00a2 89F0     			movw	%si,	%ax		
  90 00a4 31D2     			xorw	%dx,	%dx
  91 00a6 BB1200   			movw	$18,	%bx	# 18 sectors per track 
  92              						# for floppy disk
  93 00a9 F7F3     			divw	%bx
  94 00ab 42       			incw	%dx
  95 00ac 88D1     			movb	%dl,	%cl	# cl=sector number
  96 00ae 31D2     			xorw	%dx,	%dx
  97 00b0 BB0200   			movw	$2,		%bx	# 2 headers per track 
  98              								# for floppy disk
  99 00b3 F7F3     			divw	%bx
 100              	
 101 00b5 88D6     			movb	%dl,	%dh	# head
 102 00b7 30D2     			xorb	%dl,	%dl	# driver
 103 00b9 88C5     			movb	%al,	%ch	# cylinder
 104 00bb 5B       			popw	%bx		# save to es:bx
 105              	rp_read:
 106 00bc B001     			movb	$0x1,	%al	# read 1 sector
 107 00be B402     			movb	$0x2,	%ah
 108 00c0 CD13     			int		$0x13
 109 00c2 72F8     			jc		rp_read
 110 00c4 5A       			popw	%dx
 111 00c5 59       			popw	%cx
 112 00c6 58       			popw	%ax
 113 00c7 C3       			ret
 114              			
 115 00c8 90909090 	.org	0x1fe, 0x90
 115      90909090 
 115      90909090 
 115      90909090 
 115      90909090 
 116 01fe 55AA     	.word	0xaa55
 117              	
GAS LISTING bootsect.s 			page 4


DEFINED SYMBOLS
          bootsect.s:7      .text:0000000000000000 start
  include/kernel.inc:3      *ABS*:0000000000000008 CODE_SEL
  include/kernel.inc:4      *ABS*:0000000000000010 DATA_SEL
  include/kernel.inc:5      *ABS*:0000000000080000 IDT_ADDR
  include/kernel.inc:6      *ABS*:0000000000000800 IDT_SIZE
  include/kernel.inc:7      *ABS*:0000000000080800 GDT_ADDR
  include/kernel.inc:9      *ABS*:0000000000000005 GDT_ENTRIES
  include/kernel.inc:15     *ABS*:0000000000000028 GDT_SIZE
  include/kernel.inc:17     *ABS*:0000000000000048 KERNEL_SECT
  include/kernel.inc:18     *ABS*:00000000000a0000 STACK_BOT
          bootsect.s:18     .text:0000000000000036 code
          bootsect.s:9      .text:0000000000000008 gdt
          bootsect.s:15     .text:0000000000000030 gdt_48
          bootsect.s:31     .text:000000000000004c rd_kern
          bootsect.s:83     .text:000000000000009e read_sect
          bootsect.s:64     .text:0000000000000080 enable_a20
          bootsect.s:105    .text:00000000000000bc rp_read

NO UNDEFINED SYMBOLS
