CC = $(TOOLPREFIX)gcc
AS = $(TOOLPREFIX)gas
LD = $(TOOLPREFIX)ld
OBJCOPY = $(TOOLPREFIX)objcopy
OBJDUMP = $(TOOLPREFIX)objdump
QEMU = qemu-system-i386
CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer
CFLAGS += $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
ASFLAGS = -m32 -gdwarf-2 -Wa,-divide
LDFLAGS += -m $(shell $(LD) -V | grep elf_i386 2>/dev/null | head -n 1)

#bootblock: bootasm.S bootmain.c
bootblock: bootasm.S bc.c
#	$(CC) $(CFLAGS) -fno-pic -O -nostdinc -I. -c bootmain.c
	$(CC) $(CFLAGS) -fno-pic -O -nostdinc -I. -c bc.c
	$(CC) $(CFLAGS) -fno-pic -nostdinc -I. -c bootasm.S
#	$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o
	$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bc.o
	$(OBJDUMP) -S bootblock.o > bootblock.asm
	$(OBJCOPY) -S -O binary -j .text bootblock.o bootblock
	./sign.pl bootblock
mHDimage:
	dd if=/dev/zero of=mHDimage count=10000
	dd if=bootblock of=mHDimage conv=notrunc
	dd if=kernelmemfs of=mHDimage seek=1 conv=notrunc
rfhd:mHDimage
	$(QEMU) -drive file=mHDimage,index=0,media=disk,format=raw -smp 2 -m 256
clean:
	rm -v *.o bootblock mHDimage
