#include "ucode.c"

int console, s0, s1;

main(int argc, char *argv[ ])
{
  int in, out;

  in  = open("/dev/tty0", O_RDONLY);
  out = open("/dev/tty0", O_WRONLY);
  printf("%s\n", "KCINIT : fork a login task on console");

  console = fork();
  if (console){
    printf("INIT: fork login on serial port 0\n");
    s0 = fork();
    if (s0){
       printf("INIT: fork login on serial port 1\n");
       s1 = fork();
       if (s1)
          parent();
       else
         logins1();
    }
    else
      logins0();
  }
  else
    login();
}

int login()
{
  exec("login /dev/tty0");
}

int logins0()
{
  exec("login /dev/ttyS0");
}

int logins1()
{
  exec("login /dev/ttyS1");
}
      
int parent()
{
  int pid, status;
  //printf("KCINIT : waiting .....\n");
  while(1){
    pid = wait(&status);
    if (pid==console){

       printf("-----------------------------------------------------\n");
       printf("KCINIT: Oh my God! My beloved sonsole child %d has died\n", pid);
       printf("KCINIT:    Oh well..! I'll just fork another one!\n");
       printf("-----------------------------------------------------\n");
       console = fork();
       if (console)
	 continue;
       else
         login();
    }
    else if (pid==s0){
       printf("-----------------------------------------------------\n");
       printf("KCINIT: Oh my Lord! My beloved serial child %d has died\n", pid);
       printf("KCINIT:    Oh hell! I'll just fork another one!\n");
       printf("-----------------------------------------------------\n");
       s0 = fork();
       if (s0)
	 continue;
       else
         logins0();
    }
    else if (pid==s1){
       printf("-----------------------------------------------------\n");
       printf("KCINIT: Oh my Lord! My beloved serial child %d has died\n", pid);
       printf("KCINIT:    Oh hell! I'll just fork another one!\n");
       printf("-----------------------------------------------------\n");
       s1 = fork();
       if (s1)
	 continue;
       else
         logins1();
    }
    printf("KCINIT : I just buried an orphan child task %d\n", pid);
  }
}

